{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// ===========Librarys==============\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst iconOk = '../img/bi_check2-circle.png';\nconst iconError = '../img/bi_x-octagon.png';\n// ===========Variables===============\nconst form = document.querySelector('.form');\n\n// ==========Create Form===============\nfunction formTemplate() {\n\treturn `\n  <label class=\"delay-label\">\n    Delay (ms)\n    <input type=\"number\" name=\"delay\" required />\n  </label>\n\n  <fieldset>\n    <legend>State</legend>\n    <label>\n      <input type=\"radio\" name=\"state\" value=\"fulfilled\" required />\n      Fulfilled\n    </label>\n    <label>\n      <input type=\"radio\" name=\"state\" value=\"rejected\" required />\n      Rejected\n    </label>\n  </fieldset>\n\n  <button type=\"submit\">Create notification</button>`\n}\n\nform.innerHTML = formTemplate();\n\n// =========Form Setting and Create Promise============\nconst input = document.querySelector('label > input');\n\nlet delay;\n\ninput.addEventListener('input', e => {\n\tdelay = e.currentTarget.value;\n})\n\nform.addEventListener('submit', e => {\n\te.preventDefault();\n\tconst promiseState = form.elements.state.value;\n\tfunction createPromise(delay, state) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (state === 'fulfilled') {\n\t\t\t\t\tresolve(delay);\n\t\t\t\t} else {\n\t\t\t\t\treject(delay);\n\t\t\t\t}\n\t\t\t}, delay);\n\t\t});\n\t}\n\n\t\n\n\tcreatePromise(delay, promiseState)\n\t\t.then(value => {\n\t\t\tiziToast.show({\n\t\t\t\timage: iconOk,\n\t\t\t\ttitle: 'OK',\n\t\t\t\ttitleColor: '#fff',\n\t\t\t\tmessage: `Fulfilled promise in ${value} ms`,\n\t\t\t\tmessageColor: '#FFFFFF',\n\t\t\t\tbackgroundColor: '#59A10D',\n\t\t\t\tposition: 'topRight',\n\t\t\t});\n\t\t})\n\t\t.catch(error => {\n\t\t\tiziToast.show({\n\t\t\t\timage: '../img/bi_check2-circle.png',\n\t\t\t\timageWidth: 50,\n\t\t\t\ttitle: 'Error',\n\t\t\t\ttitleColor: '#fff',\n\t\t\t\tmessage: `Rejected promise in ${error} ms`,\n\t\t\t\tmessageColor: '#FFFFFF',\n\t\t\t\tbackgroundColor: '#EF4040',\n\t\t\t\tposition: 'topRight',\n\t\t\t});\n\t\t});\n\tform.reset();\n});"],"names":["iconOk","form","formTemplate","input","delay","e","promiseState","createPromise","state","resolve","reject","value","iziToast","error"],"mappings":"oGAGA,MAAMA,EAAS,8BAGTC,EAAO,SAAS,cAAc,OAAO,EAG3C,SAASC,GAAe,CACvB,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAmBR,CAEAD,EAAK,UAAYC,IAGjB,MAAMC,EAAQ,SAAS,cAAc,eAAe,EAEpD,IAAIC,EAEJD,EAAM,iBAAiB,QAASE,GAAK,CACpCD,EAAQC,EAAE,cAAc,KACzB,CAAC,EAEDJ,EAAK,iBAAiB,SAAUI,GAAK,CACpCA,EAAE,eAAc,EAChB,MAAMC,EAAeL,EAAK,SAAS,MAAM,MACzC,SAASM,EAAcH,EAAOI,EAAO,CACpC,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACvC,WAAW,IAAM,CACZF,IAAU,YACbC,EAAQL,CAAK,EAEbM,EAAON,CAAK,CAEb,EAAEA,CAAK,CACX,CAAG,CACD,CAIDG,EAAcH,EAAOE,CAAY,EAC/B,KAAKK,GAAS,CACdC,EAAS,KAAK,CACb,MAAOZ,EACP,MAAO,KACP,WAAY,OACZ,QAAS,wBAAwBW,CAAK,MACtC,aAAc,UACd,gBAAiB,UACjB,SAAU,UACd,CAAI,CACJ,CAAG,EACA,MAAME,GAAS,CACfD,EAAS,KAAK,CACb,MAAO,8BACP,WAAY,GACZ,MAAO,QACP,WAAY,OACZ,QAAS,uBAAuBC,CAAK,MACrC,aAAc,UACd,gBAAiB,UACjB,SAAU,UACd,CAAI,CACJ,CAAG,EACFZ,EAAK,MAAK,CACX,CAAC"}